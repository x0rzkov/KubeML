---
version: "3.8"
services:

  kubeml-api-gateway:
    image: lucmichalski/kubeml-api-gateway:1.1.0
    build: 
      context: ./haproxy
      dockerfile: Dockerfile
    container_name: ${NAMESPACE}-gateway
    ports:
    - 1234:80
    - 1235:70
    restart: unless-stopped
    networks:
    - internal
    - web  
    volumes:
    - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
    - kubeml-kubernetes-backend
    - kubeml-stripe-backend
    - kubeml-frontend-server

  # docker exec -it  kubernetes-master bash
  kubernetes-master:
    image: lucmichalski/kubeml-kubernetes-master:latest-ubuntu
    container_name: kubernetes-master
    build:
      context: ./kubeml-kubernetes
      dockerfile: dockerfile
    # dns:
    # - 8.8.8.8
    working_dir: /work
    stdin_open: true
    tty: true
    privileged: true
    volumes:
    - ./kubeml-kubernetes:/work
    #- /var/run/docker.sock:/run/docker.sock
    #ports:
    #- 6443:6443    
    links:
    - kubernetes-node:kubernetes-node
    networks:
    - internal
    hostname: kubernetes-master
    # entrypoint: /bin/bash
    # entrypoint: ["/usr/local/bin/entrypoint", "/sbin/init"]

  kubernetes-node:
    image: lucmichalski/kubeml-kubernetes-node:latest-ubuntu
    container_name: kubernetes-node
    build:
      context: ./kubeml-kubernetes
      dockerfile: dockerfile
    dns:
    - 8.8.8.8
    working_dir: /work
    stdin_open: true
    tty: true
    privileged: true
    volumes:
    - ./kubeml-kubernetes:/work
    #- /var/run/docker.sock:/run/docker.sock
    # depends_on:
    # - kubernetes-master
    networks:
    - internal
    hostname: kubernetes-node

  kubeml-kubernetes-backend:
    image: lucmichalski/kubeml-kubernetes-backend:1.1.0
    build: 
      context: ./kubeml-kubernetes-backend
      dockerfile: Dockerfile
      args:
      - KUBERNETES_VERSION=${KUBERNETES_VERSION}
      - HELM_VERSION=3
    container_name: ${NAMESPACE}-kubernetes-backend
    ports:
    - 5050:5050
    environment:      
      KUBERNETES_MASTER: http://kubernetes-master:6443
      DOMAIN: ${DOMAIN}
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
      FIREBASE_DATABASE_URL: ${FIREBASE_DATABASE_URL}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
      FIREBASE_APP_ID: ${FIREBASE_APP_ID}
      FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
      OVH_APP_KEY: ${OVH_APP_KEY}
      OVH_APP_SECRET: ${OVH_APP_SECRET}
      OVH_CONSUMER_KEY: ${OVH_CONSUMER_KEY}
    volumes:
    - ./kubeml-kubernetes-backend/routes:/usr/src/app/routes
    networks:
    - internal
    restart: unless-stopped
    hostname: kubeml-kubernetes-backend
    depends_on:
    - kubernetes-master
    - kubernetes-node

  kubeml-stripe-backend:
    image: lucmichalski/kubeml-stripe-backend:1.1.0
    build: 
      context: ./kubeml-stripe-backend
      dockerfile: Dockerfile
    container_name: ${NAMESPACE}-stripe
    environment:
      API_ENDPOINT: ${API_ENDPOINT}
      DOMAIN: ${DOMAIN}
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
      FIREBASE_DATABASE_URL: ${FIREBASE_DATABASE_URL}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
      FIREBASE_APP_ID: ${FIREBASE_APP_ID}
      FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    networks:
    - internal
    ports:
    - 8080:8080
    restart: unless-stopped
    hostname: kubeml-stripe-backend

  kubeml-frontend-server:
    image: lucmichalski/kubeml-frontend-server:1.1.0
    build: 
      context: ./kubeml-frontend-server
      dockerfile: Dockerfile
    container_name: ${NAMESPACE}-frontend
    ports:
    - 6060:6060
    environment:
      API_ENDPOINT: ${API_ENDPOINT}
    networks:
    - internal
    restart: unless-stopped
    hostname: kubeml-frontend-server

networks:
  internal:
    driver: bridge
  web:
    external: true
